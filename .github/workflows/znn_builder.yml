name: Build and release znnd and libznn

on:
  push:
    branches:
      - master
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  harden_security:
    name: Harden Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871
      - name: Ensure SHA pinned actions
        uses: zgosalvez/github-actions-ensure-sha-pinned-actions@40ba2d51b6b6d8695f2b6bd74e785172d4f8d00f
  xgo:
    needs: harden_security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871
      - name: Install zip utility
        run: |
          sudo apt update
          sudo apt install -y zip
      - name: Check Go environment
        run: |
          go env
      - name: Run tests
        run: |
          for s in $(go list ./...); do if ! go test -failfast -v -p 1 $s; then exit 1; fi; done
      # - name: Check for Go vulnerabilities
      #   run: |
      #     go install golang.org/x/vuln/cmd/govulncheck@latest
      #     /home/runner/go/bin/govulncheck -json ./...
      - name: Build znnd
        uses: crazy-max/ghaction-xgo@be2dfe6e532254a351b2cd6f8f245847d0cbcdf0
        with:
          xgo_version: "v0.33.0"
          go_version: 1.23.0
          dest: build
          prefix: znnd
          pkg: cmd/znnd
          targets: darwin/arm64,darwin/amd64,windows/amd64,linux/amd64,linux/arm64
          v: true
          x: true
          ldflags: -s -w
          buildvcs: false
          buildmode: default
          trimpath: true
      - name: Build libznn
        uses: crazy-max/ghaction-xgo@be2dfe6e532254a351b2cd6f8f245847d0cbcdf0
        with:
          xgo_version: "v0.33.0"
          go_version: 1.23.0
          dest: build
          prefix: libznn
          pkg: cmd/libznn
          targets: darwin/arm64,darwin/amd64,linux/amd64,linux/arm64
          v: true
          x: true
          tags: libznn
          ldflags: -s -w
          buildvcs: false
          buildmode: c-shared
          trimpath: true
      - name: Build libznn (windows/amd64)
        uses: crazy-max/ghaction-xgo@be2dfe6e532254a351b2cd6f8f245847d0cbcdf0
        with:
          xgo_version: "v0.33.0"
          go_version: 1.23.0
          dest: build
          prefix: libznn
          pkg: cmd/libznn
          targets: windows/amd64
          v: true
          x: true
          tags: libznn
          ldflags: -s -w
          buildvcs: false
          buildmode: c-shared
          trimpath: true
      - name: Run makefat for darwin builds
        run: |
          cd ..
          git clone https://github.com/randall77/makefat.git
          cd makefat/
          git checkout 7ddd0e42c8442593c87c1705a5545099604008e5
          go build -o mainfat makefat.go
          ./mainfat ../go-zenon/build/libznn-darwin-universal.dylib ../go-zenon/build/libznn-darwin-amd64.dylib ../go-zenon/build/libznn-darwin-arm64.dylib
          ./mainfat ../go-zenon/build/znnd-darwin-universal ../go-zenon/build/znnd-darwin-amd64 ../go-zenon/build/znnd-darwin-arm64
      - name: Go back to build directory, remove header files and add execute flag
        run: |
          cd build/
          rm ./*.h
          chmod +x ./*
      - name: Archive files
        run: |
          cd build/
          for file in *windows*; do zip $(echo $file | rev | cut -d '.' -f2- | rev)".zip" "$file" && rm "$file" ; done && for so in "linux" "darwin"; do for file in *"$so"*; do tar cvzf $(echo $file | rev | cut -d '.' -f2- | rev)".tar.gz" "$file" && rm "$file" ; done; done
      - name: Generate checksums
        run: | 
          cd build/
          sha256sum *
          sha256sum * > SHA256CHECKSUMS.txt
      - name: Set version
        run: |
          GOZENON=$(cat metadata/version.go | grep Version | awk -F '"' '{print $2}')
          echo "GOZENON_VERSION=$GOZENON" >> $GITHUB_ENV
      - name: Upload files to a GitHub release
        uses: svenstaro/upload-release-action@04733e069f2d7f7f0b4aebc4fbdbce8613b03ccd
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/*
          release_name: ${{ env.GOZENON_VERSION }}
          tag: ${{ env.GOZENON_VERSION }}-alphanet
          file_glob: true
          overwrite: true
          body: ""
